// Generated by CoffeeScript 1.6.3
(function() {
  var blankTemplate, env, fs, handlebars, pathCache, textCache, utils;

  fs = require("fs");

  handlebars = require("handlebars");

  env = require("../enviroments");

  utils = require("../utils");

  pathCache = {};

  textCache = {};

  blankTemplate = handlebars.compile("");

  module.exports = {
    fromPath: function(path, callback) {
      var t;
      if (env.cache && (t = pathCache[path])) {
        callback(null, t);
        return;
      }
      return fs.readFile(path, function(err, data) {
        var e;
        if (err) {
          console.error("open file " + path + " error", err);
          callback(err);
          return;
        }
        try {
          t = handlebars.compile(data.toString());
        } catch (_error) {
          e = _error;
          console.error("compile template from path " + path + " error", e);
          callback(e);
          return;
        }
        if (env.cache) {
          pathCache[path] = t;
        }
        return callback(null, t);
      });
    },
    fromText: function(text) {
      var err, md5, t;
      if (env.cache) {
        md5 = utils.md5(text);
        if (t = textCache[md5]) {
          return t;
        }
      }
      try {
        t = handlebars.compile(text);
      } catch (_error) {
        err = _error;
        console.error("compile template from text error", err);
        return "";
      }
      if (env.cache) {
        textCache[md5] = t;
      }
      return t;
    }
  };

}).call(this);
