// Generated by CoffeeScript 1.6.3
(function() {
  var compData, dataFilePath, env, fs, loadData, path, urlData, watch, _;

  fs = require("fs");

  path = require("path");

  watch = require("node-watch");

  env = require("./enviroments");

  _ = require("lodash");

  dataFilePath = env.dataFile;

  urlData = {};

  compData = {};

  loadData = function() {
    var data;
    if (fs.existsSync(dataFilePath)) {
      data = require(dataFilePath);
      urlData = data.urls || {};
      return compData = data.comps || {};
    }
  };

  loadData();

  watch(dataFilePath, function() {
    var err;
    require.cache[dataFilePath] = null;
    try {
      loadData();
      return console.log("[Data Reload]");
    } catch (_error) {
      err = _error;
      return console.log("[Data Reload Error] " + err);
    }
  });

  module.exports = {
    getUrlData: function(path, params) {
      return this.getData("URL", path, params);
    },
    getCompData: function(path, params) {
      return this.getData("COMP", path, params);
    },
    getData: function(type, path, params) {
      var result, targetData;
      targetData = (function() {
        switch (type) {
          case "URL":
            return urlData;
          case "COMP":
            return compData;
        }
      })();
      if (!_.has(targetData, path)) {
        return {
          found: false
        };
      }
      result = targetData[path];
      return {
        found: true,
        result: _.isFunction(result) ? result(params) : result
      };
    }
  };

}).call(this);
